// Automatically generated by Interoptopus.

#pragma warning disable 0105
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using ConsoleApp;
#pragma warning restore 0105

namespace ConsoleApp
{
    public static partial class Interop
    {
        public const string NativeLib = "corrupt_self_demo";

        static Interop()
        {
            var api_version = Interop.my_api_guard();
            if (api_version != 3658951630320689033ul)
            {
                throw new TypeLoadException($"API reports hash {api_version} which differs from hash in bindings (3658951630320689033). You probably forgot to update / copy either the bindings or the library.");
            }
        }


        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "my_api_guard")]
        public static extern ulong my_api_guard();

        /// Destroys the given instance.
        ///
        /// # Safety
        ///
        /// The passed parameter MUST have been created with the corresponding init function;
        /// passing any other value results in undefined behavior.
        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "search_resultdestroy")]
        public static extern FFIError search_resultdestroy(ref IntPtr context);

        /// Destroys the given instance.
        ///
        /// # Safety
        ///
        /// The passed parameter MUST have been created with the corresponding init function;
        /// passing any other value results in undefined behavior.
        public static void search_resultdestroy_checked(ref IntPtr context)
        {
            var rval = search_resultdestroy(ref context);;
            if (rval != FFIError.Ok)
            {
                throw new InteropException<FFIError>(rval);
            }
        }

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "search_resultnew")]
        public static extern FFIError search_resultnew(ref IntPtr context);

        public static void search_resultnew_checked(ref IntPtr context)
        {
            var rval = search_resultnew(ref context);;
            if (rval != FFIError.Ok)
            {
                throw new InteropException<FFIError>(rval);
            }
        }

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "search_resultget_result_detail")]
        public static extern IntPtr search_resultget_result_detail(IntPtr context, ulong index);

    }

    public enum FFIError
    {
        Ok = 0,
        Null = 100,
        Panic = 200,
        Fail = 300,
    }


    public partial class SearchResult : IDisposable
    {
        private IntPtr _context;

        private SearchResult() {}

        public static SearchResult New()
        {
            var self = new SearchResult();
            var rval = Interop.search_resultnew(ref self._context);
            if (rval != FFIError.Ok)
            {
                throw new InteropException<FFIError>(rval);
            }
            return self;
        }

        public void Dispose()
        {
            var rval = Interop.search_resultdestroy(ref _context);
            if (rval != FFIError.Ok)
            {
                throw new InteropException<FFIError>(rval);
            }
        }

        public IntPtr GetResultDetail(ulong index)
        {
            return Interop.search_resultget_result_detail(_context, index);
        }

        public IntPtr Context => _context;
    }



    public class InteropException<T> : Exception
    {
        public T Error { get; private set; }

        public InteropException(T error): base($"Something went wrong: {error}")
        {
            Error = error;
        }
    }

}
